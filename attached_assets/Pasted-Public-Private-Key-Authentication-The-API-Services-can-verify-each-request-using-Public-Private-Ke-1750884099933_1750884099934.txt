Public-Private Key Authentication
The "API Services" can verify each request using Public-Private Key Cryptography. The benefit of using Public Key cryptography is that the customer need not trust IKanoon for correct accounting. And until and unless the private key of the customer is stolen, it is safe and secure from all security attacks.

Generating Public-Private Key Pair
The first step in public private key cryptography is to generate such a pair. You should generate your key pair and then upload the public key to the API Services. You should not disclose the private key to anyone other than to sign requests on your webserver. The API services will not be generating the key pair on your behalf as you do not need to trust the API services for correct accounting.

Command LinePythonJavaPHP
openssl genrsa  -out private.pem 2048
openssl rsa -in private.pem -outform PEM -pubout -out public.pem
Signing message with private key
The Authorization header contains a signed certificate of the unique message with each request. The API user signs the message using its private key. Here is the sample code for signing the message:

PythonJavaPHP
from Crypto.PublicKey import RSA
from Crypto.Hash import SHA256
from Crypto.Signature import PKCS1_v1_5

def get_private_key():
    key = open(<path-to-private_key.pem>, 'r').read()
    private_key= RSA.importKey(key)
    return private_key

def sign_message(message):
    private_key = get_private_key() # you may cache the key
    signer = PKCS1_v1_5.new(private_key)
    digest = SHA256.new(message)
    return signer.sign(digest)
AJAX Approach
The customer of API services should just sign the request and send a javascript code to its user to send the actual request to the API services. Here is the jquery code that is sent to the users. The code automatically contacts the API services with the specified URL, customer email address, X-Message and the signature. The result obtained is then added to the html div in the page. Look at the complete_fn function to see how various fields in the JSON response can be used to construct the HTML page.

//div to hold result of AJAX request
<div id="ikresult"><div>
//load jquery
<script TYPE="text/javascript" SRC="jquery.min.js"></script>
<script type="text/javascript">
$(document).ready(function(){
    var apiurl = <IK API url>;
    var headers = {'X-Customer': <customer-email-id>, 
                   'X-Message':  <base64 encoded unique message>, 
                   'Authorization': HMAC <base64 encoded signed message>};

    // for adding document
    // the json result obtained has the document as doc 
    var complete_fn =  
                function (jsonObject) {
                    var jsonResponse = jsonObject.responseJSON;
                    html_data = jsonResponse.doc; 
                    $("#ikresult").append(html_data);
                };   

    // for adding document fragment
    var complete_fn =  
                function (jsonObject) {
                    var jsonResponse = jsonObject.responseJSON;
                    html_data = '<div class="title">Showing document fragments containing the query <b>' + 
                                jsonResponse.formInput + '</b> in ' + jsonResponse.title + '</div>';

                    html_data += '<div><a href="/doc/' + jsonResponse.tid + 
                               '/>View complete document</a></div>';

                    html_data += '<div class="headline">' + jsonResponse.headline + '</div>'; 

                    $("#ikresult").append(html_data);
                };

    // for adding search results
    var complete_fn =  
                function (jsonObject) {
                    var jsonResponse = jsonObject.responseJSON;
                    var docs         = jsonResponse.docs;
                    var categories   = jsonResponse.categories;
                    var formInput    = jsonResponse.encodedformInput;

                    var html_data = '<div class="found"><b>' + jsonResponse.found + '</b></div>';
                    html_data += '<div class="results">';
                    for (var i = 0; i < docs.length; i++) {
                        var doc = docs[i];
                        html_data += '<div class="result"><a href="/docfragment/'+ doc.tid +
                                     '/?formInput=' + formInput + '">'  + doc.title+ '</a><div class="fragment">' 
                                      + doc.headline + '</div><div class="docsource">' + doc.docsource+
                                     '</div></div>';
                    }

                    html_data += '</div><div class="categories">';
                    for (var i = 0; i < categories.length; i++){
                        category = categories[i];
                        html_data += '<div class="categories">' + category[0];
                        for (var j = 0; j < category[1].length; j++) {
                            html_data += '<div><a href="/search/?formInput=' + category[1][j].formInput + 
                                         '">' + category[1][j].value + '</a></div>';
                        }
                        html_data += '</div>';
                    }

                    html_data += '</div>';
                    $("#ikresult").append(html_data);
                };   
 
    var settings = {url: apiurl, headers: headers, dataType: "json",
                    complete: complete_fn, type: "POST", };
    $.ajax(settings);
});  
</script> 