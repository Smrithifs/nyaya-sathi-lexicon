📌so in my function **Case law finder 
👤 Authentication:
✅ Use the **public-private key crypto** method for Indian Kanoon API (not API token).
✅ I will upload my  `private_key.pem`.
✅ I’ve already uploaded the corresponding public key to Indian Kanoon.

🔐 Your job is to:
- Sign each request to Indian Kanoon API using my private key
- Attach required headers:
  - `X-Customer`: my email (smritzz0007@gmail.com)
  - `X-Message`: base64-encoded unique message (e.g., UUID + timestamp + URL)
  - `Authorization`: HMAC + base64-encoded signed message

🔍 Use these Indian Kanoon API endpoints:
1. `https://api.indiankanoon.org/search/?formInput=<query>&pagenum=<pagenum>`
2. `https://api.indiankanoon.org/doc/<docid>/`
3. `https://api.indiankanoon.org/origdoc/<docid>/`
4. `https://api.indiankanoon.org/docfragment/<docid>/?formInput=<query>`
5. `https://api.indiankanoon.org/docmeta/<docid>/`

🧠 What the app should do:

### 1. Search Flow:
- User can enter:
  - A **case name or keyword**
  - OR a **section/act** (e.g., "Article 21", "Section 438 CrPC")
  - OR filter cases from **Year X to Year Y**
- App should:
  - Fetch results from Indian Kanoon `/search/` endpoint using formInput and optional filters (`fromdate`, `todate`)
  - Display **top 5 results**
  - On refresh, display 5 **new** cases (next from paginated results)

### 2. Case Detail Flow:
For each of the 5 cases shown:
- Fetch using `/doc/`, `/docmeta/`, `/origdoc/`
- Pass the judgment to Gemini AI via `summarize_with_gemini.py`
- Display a rich summary including:
  - 📌 Case Name, Case Number
  - 🗓 Date of Judgment
  - 🧑‍⚖️ Bench & Judge(s)
  - 🏛 Court (SC/HC/etc.)
  - 📚 Citation
  - ⚖️ Ratio Decidendi
  - 🔍 Legal Significance / Precedent
  - 📝 Summary of the case
  - 🧾 Original Judgment document (PDF or text)

### 3. UI Requirements:
- Clean UI (React + Tailwind preferred)
- Filters:
  - 📅 From Year, To Year
  - 📚 Section or Act (e.g., Article 19, Section 376 IPC)
- 🔁 "Refresh" button to show 5 new cases per filter set
- Display structured Gemini AI summary per case



🔑 Setup Notes:
- Use my Gemini API key as an environment variable or secret
- All Indian Kanoon requests must go via client-side (signed) using JS + AJAX or backend forwarding
